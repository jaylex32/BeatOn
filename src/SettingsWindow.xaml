<Window x:Class="WpfApp1.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Settings" Height="760" Width="1100"
        MinHeight="760" MinWidth="1100"
        MaxHeight="760" MaxWidth="1200"
        Closing="SettingsWindow_Closing">
    <Window.Resources>
        <!-- ComboBoxToggleButtonTemplate -->
        <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Path x:Name="Arrow" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,0,10,0"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#E5E5E5"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#FF505050"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Modern flat style for ComboBox -->
        <Style x:Key="FlatComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="GhostWhite"/>
            <Setter Property="BorderBrush" Value="#FF606060"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButtonTemplate}"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                            <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Name="DropDownBorder"
                                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                            BorderThickness="1"/>
                                    <ScrollViewer Margin="4,6,4,6"
                                                  SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    VirtualizingStackPanel.IsVirtualizing="True"
                                                    VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0,0,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border x:Name="Border"
                                            Background="{TemplateBinding Background}"
                                            Padding="{TemplateBinding Padding}">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#FF444444"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#FF555555"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>        
        <!-- Modern flat style for TextBlock -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- Modern flat style for TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <!-- Modern flat style for buttons -->
        <Style x:Key="FlatActionButton" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF606060"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="BorderBrush" Value="#FF808080"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="2" Direction="320" Color="Black" Opacity="0.3" BlurRadius="4"/>
                                </Border.Effect>
                            </Border>
                            <Border x:Name="GlowBorder"
                            Background="Transparent"
                            CornerRadius="3">
                                <Border.Effect>
                                    <BlurEffect Radius="10"/>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter x:Name="ButtonContent" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="MainBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#FF787878" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="GlowBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#3F787878" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="MainBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="#FF606060" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="GlowBorder" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="Transparent" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="White"/>
                                <Setter TargetName="ButtonContent" Property="TextElement.Foreground" Value="Black"/>
                                <Setter TargetName="ButtonContent" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- New style for sidebar buttons -->
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,15"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0,25,25,0"
                            SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="2" Direction="0" Color="Black" Opacity="0.3" BlurRadius="10"/>
                                </Border.Effect>
                                <Grid>
                                    <Rectangle x:Name="HighlightRectangle" 
                                       HorizontalAlignment="Left" 
                                       Width="5" 
                                       Fill="Transparent"
                                       SnapsToDevicePixels="True"/>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="15,0,0,0"
                                              TextOptions.TextRenderingMode="ClearType"
                                              TextOptions.TextFormattingMode="Display"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="#3F3F3F"/>
                                <Setter TargetName="HighlightRectangle" Property="Fill" Value="#6A6A6A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="#2A2A2A"/>
                                <Setter TargetName="HighlightRectangle" Property="Fill" Value="#FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AdvancedTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#FF424242"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF606060"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="True">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" Direction="320" Color="Black" Opacity="0.3" BlurRadius="4"/>
                            </Border.Effect>
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
                                <TextBlock x:Name="PlaceholderText" 
                                   Text="{TemplateBinding Tag}" 
                                   Foreground="#99FFFFFF" 
                                   Visibility="Collapsed" 
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                   TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="#FF787878"/>
                                <Setter Property="Background" Value="#FF505050"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" Value="#FF909090"/>
                                <Setter Property="Background" Value="#FF585858"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" Direction="0" Color="#FF909090" Opacity="0.5" BlurRadius="10"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="White" Offset="0.0"/>
            <GradientStop Color="White" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF7F7F7" Offset="0.0"/>
            <GradientStop Color="#FFD4D4D4" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FFA6AEB7"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FFABB7C3"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="Gainsboro" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF9E9E9E"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Gainsboro" Offset="0.0"/>
            <GradientStop Color="#FFDCE1E6" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF828588"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF949494"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD0D0D0" Offset="0.0"/>
            <GradientStop Color="#FFD4D4D4" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF9E9E9E"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder"  Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder"  Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" 
       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
       Placement="Bottom" 
       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border x:Name="dropDownBorder" 
            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
            BorderThickness="1"
            MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
       Margin="1" Placement="Bottom" 
       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border x:Name="dropDownBorder"
            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" 
            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
            BorderThickness="1"
            MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="#FF444444">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Sidebar -->
        <Border Background="#FF2A2A2A" Grid.Column="0" Padding="0,20,0,0">
            <StackPanel>
                <TextBlock Text="Settings" FontSize="28" FontWeight="Bold" Foreground="White" Margin="15,0,20,30"/>
                <Button Content="General" Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="GeneralSection" Margin="0,0,0,5"/>
                <Button Content="Qobuz" Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="QobuzSection" Margin="0,0,0,5"/>
                <Button Content="Deezer" Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="DeezerSection" Margin="0,0,0,5"/>
                <Button Content="Lidarr" Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="LidarrSection" Margin="0,0,0,5"/>
                <Button Content="BeatOn" Style="{StaticResource SidebarButtonStyle}" Click="SidebarButton_Click" Tag="BeatOnSection" Margin="0,0,0,5"/>
            </StackPanel>
        </Border>

        <!-- Main Content Area -->
        <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" Padding="20">
            <StackPanel>
                <!-- General Section -->
                <StackPanel x:Name="GeneralSection" Visibility="Visible">
                    <TextBlock Text="General Settings" FontSize="24" FontWeight="Bold" Foreground="White" Margin="0,0,0,20"/>

                    <Border Background="#FF333333" CornerRadius="10" Padding="20" Margin="0,0,0,20">
                        <StackPanel>
                            <TextBlock Text="Concurrent Downloads" FontSize="18" FontWeight="SemiBold" Foreground="White" Margin="0,0,0,15"/>

                            <Grid Margin="0,0,0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Item Downloads:" FontWeight="Medium" Foreground="#CCCCCC" VerticalAlignment="Center" Margin="0,0,15,0"/>
                                <ComboBox x:Name="NumberOfConcurrentDownloadsComboBox" 
                          Grid.Column="1"
                          SelectedIndex="{Binding ItemProcessIndex}" 
                          Style="{StaticResource FlatComboBoxStyle}" 
                          Width="100" HorizontalAlignment="Left">
                                    <ComboBoxItem Content="1" />
                                    <ComboBoxItem Content="2" />
                                    <ComboBoxItem Content="3" />
                                </ComboBox>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Track Downloads:" FontWeight="Medium" Foreground="#CCCCCC" VerticalAlignment="Center" Margin="0,0,15,0"/>
                                <ComboBox x:Name="NumberOfConcurrentItemDownloads" 
                          Grid.Column="1"
                          SelectedIndex="{Binding ConcurrencyIndex}" 
                          Style="{StaticResource FlatComboBoxStyle}" 
                          Width="100" HorizontalAlignment="Left">
                                    <ComboBoxItem Content="1" />
                                    <ComboBoxItem Content="2" />
                                    <ComboBoxItem Content="3" />
                                </ComboBox>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <!-- You can add more settings sections here -->
                    <Border Background="#FF333333" CornerRadius="10" Padding="20" Margin="0,0,0,20">
                        <StackPanel>
                            <TextBlock Text="Additional Settings" FontSize="18" FontWeight="SemiBold" Foreground="White" Margin="0,0,0,15"/>
                            <!-- Add more settings controls here -->
                        </StackPanel>
                    </Border>
                </StackPanel>
                <!-- Qobuz Section -->
                <StackPanel x:Name="QobuzSection" Visibility="Collapsed">
                    <TextBlock Text="Qobuz Settings" FontSize="20" FontWeight="Bold" Foreground="White" Margin="0,0,0,10"/>
                    <TextBlock Text="Download Path" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="QobuzFolderPathTextBox" Text="{Binding QobuzFolderPath}" HorizontalAlignment="Stretch" Style="{StaticResource AdvancedTextBox}" Tag="Enter Qobuz folder path..."/>
                        <Button Content="Browse" Click="QobuzBrowseButton_Click" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource FlatActionButton}" Width="85"/>
                    </Grid>
                    <Grid Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Quality Section -->
                        <StackPanel Grid.Column="0" Margin="0,0,20,0">
                            <TextBlock Text="Quality" FontWeight="Bold" Foreground="White" Margin="0,0,0,5"/>
                            <ComboBox Style="{StaticResource FlatComboBoxStyle}" 
                                     x:Name="QobuzQualityComboBox" 
                                     SelectedValue="{Binding QobuzQuality}" 
                                     Width="250">
                                <ComboBoxItem Content="MP3  - 320 kbps" Tag="5"/>
                                <ComboBoxItem Content="FLAC - CD, 16-bit/44.1 kHz" Tag="6"/>
                                <ComboBoxItem Content="FLAC - HiFi, 24-bit/96 kHz" Tag="7"/>
                                <ComboBoxItem Content="FLAC - HiFi, 24-bit/192 kHz" Tag="27"/>
                            </ComboBox>
                        </StackPanel>

                        <!-- Preset Section -->
                        <StackPanel Grid.Column="1" Margin="0,0,20,0">
                            <TextBlock Text="Presets" FontWeight="Bold" Foreground="White" Margin="0,0,0,5"/>
                            <ComboBox x:Name="qobuzPresetComboBox" 
                              SelectionChanged="QobuzPresetComboBox_SelectionChanged" 
                              Style="{StaticResource FlatComboBoxStyle}" 
                              Width="250"/>
                        </StackPanel>

                        <!-- Cover Checkbox -->
                        <CheckBox x:Name="QobuzDownloadCoverCheckBox" 
                          Grid.Column="2"
                          Content="Download Covers" 
                          IsChecked="{Binding qobuzDownloadCover, Mode=TwoWay}" 
                          FontWeight="Bold" Foreground="White"
                          VerticalAlignment="Center" Margin="0,20,0,0"/>
                    </Grid>
                    <TextBlock Text="File Name Format" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="QobuzFileNameFormatTextBox" Text="{Binding saveLayout.qobuzAlbum}" VerticalAlignment="Center" HorizontalAlignment="Stretch" Style="{StaticResource AdvancedTextBox}" Tag="Enter Qobuz file name format..." TextChanged="QobuzFileNameFormatTextBox_TextChanged"/>
                        <Button Content="Formats" Click="Qobuz_FormatOptionsButton_Click" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource FlatActionButton}" ToolTip="File Formats" Width="85"/>
                    </Grid>

                    <!-- New section for User ID and User Auth Token -->
                    <TextBlock Text="User ID" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <TextBox x:Name="QobuzUserIdTextBox" Text="{Binding qobuz.userId}" Style="{StaticResource AdvancedTextBox}" Tag="Enter Qobuz User ID..." VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

                    <TextBlock Text="User Auth Token" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <TextBox x:Name="QobuzUserAuthTokenTextBox" Text="{Binding qobuz.userAuthToken}" Style="{StaticResource AdvancedTextBox}" Tag="Enter Qobuz User Auth Token..." VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

                    <Button Content="Retrieve Qobuz Credentials" Click="RetrieveQobuzCredentials_Click" Margin="0,10,0,0" Style="{StaticResource FlatActionButton}" HorizontalAlignment="Left"/>
                    <!-- End of new section -->

                    <TextBlock Text="App_Id" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <TextBox x:Name="Qobuz_app_id" Text="{Binding qobuz.app_id}" Style="{StaticResource AdvancedTextBox}" Tag="Qobuz App ID (retrieved automatically)" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                    <TextBlock Text="Token" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <TextBox x:Name="QobuzToken" Text="{Binding qobuz.token}" VerticalAlignment="Center" Tag="Enter Qobuz Token..." Style="{StaticResource AdvancedTextBox}" HorizontalAlignment="Stretch"/>
                    <TextBlock Text="Secrets" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <TextBox x:Name="Qobuz_Secrets" Text="{Binding qobuz.secrets}" Style="{StaticResource AdvancedTextBox}" Tag="Qobuz App Secret (retrieved automatically)" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                </StackPanel>
                <!-- Deezer Section -->
                <StackPanel x:Name="DeezerSection" Visibility="Collapsed">
                    <TextBlock Text="Deezer Settings" FontSize="20" FontWeight="Bold" Foreground="White" Margin="0,0,0,10"/>
                    <TextBlock Text="Download Path" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="DeezerFolderPathTextBox" Style="{StaticResource AdvancedTextBox}" Tag="Enter Deezer folder path..." Text="{Binding DeezerFolderPath}" HorizontalAlignment="Stretch"/>
                        <Button Content="Browse" Click="DeezerBrowseButton_Click" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource FlatActionButton}" Width="85"/>
                    </Grid>
                    <TextBlock Text="Quality" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <ComboBox Style="{StaticResource FlatComboBoxStyle}" x:Name="DeezerQualityComboBox" SelectedValue="{Binding DeezerQuality}" HorizontalAlignment="Left" Width="250">
                        <ComboBoxItem Content="128" />
                        <ComboBoxItem Content="320" />
                        <ComboBoxItem Content="flac" />
                    </ComboBox>
                    <TextBlock Text="File Name Format" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="DeezerFileNameFormatTextBox" Style="{StaticResource AdvancedTextBox}" Tag="Enter Deezer filename format..." Text="{Binding saveLayout.album}" HorizontalAlignment="Stretch" TextChanged="DeezerFileNameFormatTextBox_TextChanged"/>
                        <Button Content="Formats" Click="FormatOptionsButton_Click" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource FlatActionButton}" ToolTip="File Name Formats" Width="85"/>
                    </Grid>
                    <TextBlock Text="Arl" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="DeezerArl" Text="{Binding cookies.arl}" Style="{StaticResource AdvancedTextBox}" Tag="Enter Deezer Arl..." HorizontalAlignment="Stretch"/>
                        <Button x:Name="ArlButton" Content="Get Arl" Click="ArlButton_Click" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource FlatActionButton}" Width="85" ToolTip="This will get a Random Arl from 'firehawk52' site"/>
                    </Grid>
                    <CheckBox x:Name="DeezerDownloadCoverCheckBox" Content="Download Covers" IsChecked="{Binding deezerDownloadCover, Mode=TwoWay}" Foreground="White" Margin="0,10,0,0"/>
                    <TextBlock Text="Presets" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <ComboBox x:Name="deezerPresetComboBox" SelectionChanged="DeezerPresetComboBox_SelectionChanged" Style="{StaticResource FlatComboBoxStyle}" Width="250" HorizontalAlignment="Left"/>
                </StackPanel>

                <!-- Lidarr Section -->
                <StackPanel x:Name="LidarrSection" Visibility="Collapsed">
                    <TextBlock Text="Lidarr Settings" FontSize="20" FontWeight="Bold" Foreground="White" Margin="0,0,0,10"/>
                    <CheckBox x:Name="LidarrEnabledCheckBox" FontWeight="Bold" Content="Enable Lidarr Integration" IsChecked="{Binding LidarrEnabled, Mode=TwoWay}" Foreground="White" Margin="0,0,0,10"/>
                    <TextBlock Text="Lidarr URL" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <TextBox x:Name="LidarrUrlTextBox" Style="{StaticResource AdvancedTextBox}" Tag="Enter Lidarr Url..." Text="{Binding LidarrUrl}" Margin="0,0,0,10"/>
                    <TextBlock Text="Lidarr API Key" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <TextBox x:Name="LidarrApiKeyTextBox" Style="{StaticResource AdvancedTextBox}" Tag="Enter Lidarr Api..." Text="{Binding LidarrApiKey}"/>
                </StackPanel>

                <!-- BeatOn Dashboard Section -->
                <StackPanel x:Name="BeatOnSection" Visibility="Collapsed">
                    <TextBlock Text="BeatOn WebUI Settings" FontSize="20" FontWeight="Bold" Foreground="White" Margin="0,0,0,10"/>
                    <CheckBox x:Name="BeatOnServerEnabledCheckBox" FontWeight="Bold" Content="Enable BeatOn WebUI" IsChecked="{Binding WebUIEnabled, Mode=TwoWay}" Foreground="White" Margin="0,0,0,10"/>
                    <TextBlock Text="WebUI URL" FontWeight="Bold" Foreground="White" Margin="0,10,0,5"/>
                    <TextBox x:Name="BeatOnUrlTextBox" Style="{StaticResource AdvancedTextBox}" Tag="Enter BeatOn Url..." Text="{Binding WebUIUrl}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                </StackPanel>

                <!-- Save Button -->
                <Button Content="Save" Click="SaveButton_Click" Margin="0,20,0,0" Height="35" Width="85" Style="{StaticResource FlatActionButton}" HorizontalAlignment="Right"/>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>